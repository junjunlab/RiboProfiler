% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codon_occupancy.R
\name{codon_occupancy}
\alias{codon_occupancy}
\alias{codon_occupancy,ribosomeObj-method}
\title{Calculate Codon Occupancy}
\usage{
codon_occupancy(
  object,
  min_counts = 32,
  norm_type = c("average", "rpm"),
  upstream_codon_exclude = 0,
  downstream_codon_exclude = 0,
  ...
)

\S4method{codon_occupancy}{ribosomeObj}(
  object,
  min_counts = 32,
  norm_type = c("average", "rpm"),
  upstream_codon_exclude = 0,
  downstream_codon_exclude = 0,
  ...
)
}
\arguments{
\item{object}{ribosomeObj object.}

\item{min_counts}{An integer specifying the minimum number of counts required for a transcript to be included
in the analysis. Default is 32.}

\item{norm_type}{The nomalization methods for ribosome density. "average" is calculated by
the count at each position divided by mean density across cds region. "rpm"
is calculated by the count at each position divided by the total counts and multiplied with 10^6.
Default is "average".}

\item{upstream_codon_exclude}{An integer specifying the number of codons to exclude from the start of the coding sequence.
Default is 5.}

\item{downstream_codon_exclude}{An integer specifying the number of codons to exclude from the end of the coding sequence.
Default is 0.}

\item{...}{Useless args.}
}
\value{
This function does not return a value, but creates output files in a 'codon_occupancy' directory:
  - A text file for each sample containing codon position expression data.
  - A text file for each sample containing codon occupancy data.
}
\description{
This function calculates codon occupancy based on ribosome profiling data and transcript information.
}
\details{
This function performs the following steps:
  1. Filters reads based on minimum count threshold.
  2. Calculates codon density for each transcript.
  3. Outputs codon position expression data.
  4. Calls a Python script to calculate codon occupancy.
}
