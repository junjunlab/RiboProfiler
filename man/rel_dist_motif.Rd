% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rel_dist_motif.R
\name{rel_dist_motif}
\alias{rel_dist_motif}
\title{Calculate Relative Distance of Motifs within Transcripts}
\usage{
rel_dist_motif(
  amino_file = NULL,
  longest_trans_file = NULL,
  normed_file = NULL,
  min_counts = 64,
  motif = NULL,
  upstream = -50,
  downstream = 50
)
}
\arguments{
\item{amino_file}{Character, path to the amino acid sequence file, default is NULL.}

\item{longest_trans_file}{Character, path to the file with longest transcripts information, default is NULL.}

\item{normed_file}{Data frame, normalized data file containing sample, trans_id, and counts columns, default is NULL.}

\item{min_counts}{Integer, minimum count threshold for filtering transcripts, default is 64.}

\item{motif}{Character, the specific motif to search for, default is NULL.}

\item{upstream}{Integer, upstream distance to consider relative to motif position, default is -50.}

\item{downstream}{Integer, downstream distance to consider relative to motif position, default is 50.}
}
\value{
Invisible NULL, as the function primarily writes output to files.
}
\description{
This function calculates the relative distances of specified motifs within transcripts
from normalized data files, filtered by minimum expression counts, and outputs the results.
It handles multiple samples and uses external Python scripts for detailed calculations.
}
\examples{
\dontrun{rel_dist_motif(amino_file = "amino_seq.txt",
               longest_trans_file = "longest_transcripts.txt",
               normed_file = data.frame(sample = c("sample1", "sample2"),
                                        trans_id = c("trans1", "trans2"),
                                        counts = c(100, 150)),
               min_counts = 64,
               motif = "PKP",
               upstream = -50,
               downstream = 50)}


}
