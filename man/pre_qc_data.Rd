% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataProcess.R
\name{pre_qc_data}
\alias{pre_qc_data}
\title{pre_qc_data function}
\usage{
pre_qc_data(
  mapping_type = c("genome", "transcriptome"),
  julia_path = NULL,
  longest_trans_file = NULL,
  sam_file = NULL,
  bam_file = NULL,
  out_file = NULL,
  seq_type = c("pairedEnd", "singleEnd")
)
}
\arguments{
\item{mapping_type}{The mapping type for your sam files, "genome" or "transcriptome".}

\item{julia_path}{The julia program path on the computer.}

\item{longest_trans_file}{A string specifying the path to the longest transcript
file.}

\item{sam_file}{A character vector specifying the paths to the SAM files.}

\item{bam_file}{A character vector specifying the paths to the BAM files.}

\item{out_file}{A character vector specifying the paths to the output QC result
files.}

\item{seq_type}{The sequencing type for fastq files, "singleEnd" or "pairedEnd".}
}
\value{
The function does not return a value, but outputs QC results in text
files.
}
\description{
This function performs quality control (QC) analysis on ribosome profiling
data. The input is a SAM/BAM file generated from ribosome profiling data and the
output is a QC result in a text file format.
}
\examples{
\dontrun{
pre_qc_data(longest_trans_file = "path/to/longestTransInfo.txt",
            sam_file = c("path/to/sample1.sam", "path/to/sample2.sam"),
            out_file = c("path/to/sample1_QC_result.txt", "path/to/sample2_QC_result.txt"))
}

}
