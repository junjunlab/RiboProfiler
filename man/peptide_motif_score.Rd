% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tripeptide_motif_score.R
\name{peptide_motif_score}
\alias{peptide_motif_score}
\title{Calculate Peptide Motif Scores}
\usage{
peptide_motif_score(
  amino_file = NULL,
  codon_exp_file = NULL,
  sample_name = NULL,
  occurrence_threshold = 50
)
}
\arguments{
\item{amino_file}{A string specifying the path to the file containing amino acid sequences.}

\item{codon_exp_file}{A vector of file paths to codon expression data files.}

\item{sample_name}{A vector of sample names corresponding to each codon expression file.}

\item{occurrence_threshold}{An integer specifying the minimum occurrence threshold for peptide motifs.
Default is 50.}
}
\value{
This function does not return a value, but creates output files in a 'peptide_motif' directory.
        Each output file is named '[sample_name]_tripeptide_occupancy.txt'.
}
\description{
This function calculates peptide motif scores based on amino acid sequences and codon expression data.
It uses a Python script to perform the calculations and saves the results for each sample.
}
\details{
This function performs the following steps:
  1. Creates a 'peptide_motif' directory if it doesn't exist.
  2. Sources a Python script 'peptideMotifScore.py' from the RiboProfiler package.
  3. For each codon expression file:
     - Calls the Python function to calculate peptide motif scores.
     - Saves the results in the 'peptide_motif' directory.
     - Prints a message indicating the file has been processed.
}
\examples{
\dontrun{peptide_motif_score(
  amino_file = "path/to/amino_sequences.txt",
  codon_exp_file = c("sample1_codon_exp.txt", "sample2_codon_exp.txt"),
  sample_name = c("Sample1", "Sample2"),
  occurrence_threshold = 50
)}

}
